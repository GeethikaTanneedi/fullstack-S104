pipeline {
    agent any

    tools {
        nodejs 'NodeJS'      // NodeJS installation name in Jenkins
        maven 'MAVEN_HOME'      // Maven installation name in Jenkins
        jdk 'JDK_HOME'          // JDK installation name in Jenkins
    }

    environment {
        TOMCAT_URL = 'http://13.204.178.107:9090/manager/text'
        TOMCAT_USER = 'admin'
        TOMCAT_PASS = 'admin'
    }

    options {
        // Stop the pipeline on the first failure
        skipStagesAfterUnstable()
        ansiColor('xterm')
        timestamps()
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/GeethikaTanneedi/fullstack-S104.git'
            }
        }

        stage('Build React Frontend') {
            steps {
                dir('crud_front') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }

        stage('Package React as WAR') {
            steps {
                dir('crud_front') {
                    sh '''
                    mkdir -p target
                    cp -r build/* target/
                    jar -cvf target/frontend.war -C target/ .
                    '''
                    // Archive frontend WAR
                    archiveArtifacts artifacts: 'target/frontend.war', fingerprint: true
                }
            }
        }

        stage('Build Spring Boot Backend') {
            steps {
                dir('crud_backend') {
                    sh 'mvn clean package'
                    // Archive backend WAR/JAR
                    archiveArtifacts artifacts: 'target/*.war', fingerprint: true
                }
            }
        }

        stage('Deploy Backend WAR') {
            steps {
                dir('crud_backend') {
                    sh """
                    curl --upload-file target/backend.war \
                    ${TOMCAT_URL}/deploy?path=/backend&update=true \
                    --user ${TOMCAT_USER}:${TOMCAT_PASS}
                    """
                }
            }
        }

        stage('Deploy Frontend WAR') {
            steps {
                dir('crud_front') {
                    sh """
                    curl --upload-file target/frontend.war \
                    ${TOMCAT_URL}/deploy?path=/frontend&update=true \
                    --user ${TOMCAT_USER}:${TOMCAT_PASS}
                    """
                }
            }
        }
    }

    post {
        failure {
            echo '❌ Pipeline failed. Check the logs for errors.'
        }
        success {
            echo '✅ Pipeline succeeded. Frontend and Backend deployed successfully!'
        }
    }
}
